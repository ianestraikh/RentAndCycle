@model RentAndCycleCodeFirst.Models.BulkEmailViewModel

@{
    ViewBag.Title = "Bulk Email";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Bulk Email</h2>
<hr />
@using (Html.BeginForm("Index", "BulkEmail", FormMethod.Post, new 
                                       { enctype = "multipart/form-data" }))
{
    <h4>Select emails</h4>
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Email</th>
            </tr>
        </thead>
    </table>
    @Html.ValidationMessageFor(model => model.ToEmails, "", new { @class = "text-danger" })
    <br />

    @Html.HiddenFor(model => model.ToEmails);
    @Html.HiddenFor(model => model.SelectedRows);

    @Html.AntiForgeryToken()
    if (@ViewBag.Result != null)
    {
        <div class="alert alert-info">@ViewBag.Result</div>
    }

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Contents, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Contents, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.TextBoxFor(model => model.File, new { type = "file" })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/Scripts/DataTables/jquery.dataTables.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.select.min.js")
    @Scripts.Render("~/Scripts/DataTables/dataTables.buttons.min.js")

    <script>
        $(document).ready(function () {
            var table = $('.table').DataTable({
                stateSave: true,
                ajax: {
                    url: '/BulkEmail/GetEmails',
                    type: 'GET',
                    datatype: 'json',
                    dataSrc: ''
                },
                columns: [
                    { data: null, defaultContent: '' },
                    { data: 'email' }
                ],
                searching: false,
                lengthChange: false,
                info: false,
                drawCallback: function (settings) {
                    var pagination = $(this).closest('.dataTables_wrapper').find('.dataTables_paginate');
                    pagination.toggle(this.api().page.info().pages > 1);
                },
                columnDefs: [{
                    orderable: false,
                    className: 'select-checkbox',
                    targets: 0
                }],
                select: {
                    style: 'multi',
                    selector: 'td:first-child'
                },
                order: [[1, 'asc']],
                dom: 'Bfrtip',
                buttons: [
                    'selectAll',
                    'selectNone',
                ],
                // https://stackoverflow.com/a/25159290/7587466
                initComplete: function () {
                    var api = this.api();
                    var selected = $('#SelectedRows').attr('value');
                    if (selected != null && selected.trim() != '') {
                        selected.split(',').forEach(function (s) {
                            api.row(s).select();
                        })
                    }

                }
            });

            table.on('select.dt deselect.dt', function () {
                $('#SelectedRows').attr('value', table.rows({ selected: true }).toArray())
                var emails = table.rows({ selected: true }).nodes().to$().map(function () {
                    return $(this).text().trim();
                }).get().join(';');
                $('#ToEmails').attr('value', emails)
            })
        });
    </script>
}
<link href="~/Content/DataTables/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/select.dataTables.min.css" rel="stylesheet" />
<link href="~/Content/DataTables/css/buttons.dataTables.min.css" rel="stylesheet" />


